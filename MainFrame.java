package Forms;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTree;

/**
 *
 * 
 */
public class MainFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = -2007794547378295606L;

    private final FormController controller;

    /**
     * Creates new form mainFrame
     */
    public MainFrame() {
        initComponents();
        splitpaneMain.setDividerLocation(0.5);
        controller = new FormController(this);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (controller.fileClose()) {
                    dispose();
                    System.exit(0);
                }
            }
        });
    }

    public FormController controller() {
        return (controller);
    }

    public void showInfo(String message) {
        Thread thread = new Thread(() -> {
            labelInfo.setText(message);
        });
        thread.start();
    }

    public void showErrorDialog(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public JTree getTree() {
        return (treeMain);
    }

    public JTable getTable() {
        return (tableMain);
    }

    public javax.swing.JSplitPane getSplitPane() {
        return(splitpaneMain);
    }
    
    public enum Focused {
        FOCUS_LEFT, FOCUS_RIGHT, FOCUS_NONE;
    }
    
    public Focused getFocusedPane() {
        var c = getFocusOwner();
        
        while (c != null) {
            if (c == treeMain) {
                return (Focused.FOCUS_LEFT);
            } else if (c == tableMain) {
                return (Focused.FOCUS_RIGHT);
            }
        }
        return (Focused.FOCUS_NONE);
    }
    
    public void newTree() {
        treeMain = new JTree();
        jScrollPane1.setViewportView(treeMain);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainToolbar = new javax.swing.JToolBar();
        toolbarOpen = new javax.swing.JButton();
        toolbarSave = new javax.swing.JButton();
        toolbarProperties = new javax.swing.JButton();
        toolbarDelete = new javax.swing.JButton();
        panelMain = new javax.swing.JPanel();
        splitpaneMain = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        treeMain = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableMain = new javax.swing.JTable();
        labelInfo = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileOpen = new javax.swing.JMenuItem();
        menuFileSave = new javax.swing.JMenuItem();
        menuFileClose = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuFileExit = new javax.swing.JMenuItem();
        menuCell = new javax.swing.JMenu();
        menuCellProperties = new javax.swing.JMenuItem();
        menuTools = new javax.swing.JMenu();
        menuToolsWipe = new javax.swing.JMenuItem();
        menuToolsScan = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        mainToolbar.setRollover(true);

        toolbarOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/resources/feather-folder.png"))); // NOI18N
        toolbarOpen.setToolTipText("Open Hive");
        toolbarOpen.setFocusable(false);
        toolbarOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbarOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbarOpenActionPerformed(evt);
            }
        });
        mainToolbar.add(toolbarOpen);

        toolbarSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/resources/feather-save.png"))); // NOI18N
        toolbarSave.setToolTipText("Save Changes");
        toolbarSave.setFocusable(false);
        toolbarSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbarSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbarSaveActionPerformed(evt);
            }
        });
        mainToolbar.add(toolbarSave);

        toolbarProperties.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/resources/feather-edit.png"))); // NOI18N
        toolbarProperties.setToolTipText("Edit Cell Properties");
        toolbarProperties.setFocusable(false);
        toolbarProperties.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbarProperties.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbarPropertiesActionPerformed(evt);
            }
        });
        mainToolbar.add(toolbarProperties);

        toolbarDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Forms/resources/feather-delete.png"))); // NOI18N
        toolbarDelete.setToolTipText("Delete");
        toolbarDelete.setFocusable(false);
        toolbarDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        toolbarDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbarDeleteActionPerformed(evt);
            }
        });
        mainToolbar.add(toolbarDelete);

        treeMain.setModel(null);
        jScrollPane1.setViewportView(treeMain);

        splitpaneMain.setLeftComponent(jScrollPane1);

        tableMain.setModel(new javax.swing.table.DefaultTableModel());
        jScrollPane2.setViewportView(tableMain);

        splitpaneMain.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLayout.createSequentialGroup()
                .addComponent(splitpaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitpaneMain)
        );

        menuFile.setText("File");

        menuFileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuFileOpen.setText("Open");
        menuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileOpenActionPerformed(evt);
            }
        });
        menuFile.add(menuFileOpen);

        menuFileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuFileSave.setText("Save");
        menuFileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileSaveActionPerformed(evt);
            }
        });
        menuFile.add(menuFileSave);

        menuFileClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuFileClose.setText("Close");
        menuFileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileCloseActionPerformed(evt);
            }
        });
        menuFile.add(menuFileClose);
        menuFile.add(jSeparator2);

        menuFileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuFileExit.setText("Exit");
        menuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileExitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileExit);

        menuBar.add(menuFile);

        menuCell.setText("Cell");

        menuCellProperties.setText("Properties");
        menuCellProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCellPropertiesActionPerformed(evt);
            }
        });
        menuCell.add(menuCellProperties);

        menuBar.add(menuCell);

        menuTools.setText("Tools");

        menuToolsWipe.setText("Wipe Hive Free Space");
        menuToolsWipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuToolsWipeActionPerformed(evt);
            }
        });
        menuTools.add(menuToolsWipe);

        menuToolsScan.setText("Scan Hive for Errors");
        menuToolsScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuToolsScanActionPerformed(evt);
            }
        });
        menuTools.add(menuToolsScan);

        menuBar.add(menuTools);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileOpenActionPerformed
        controller.fileOpen();
    }//GEN-LAST:event_menuFileOpenActionPerformed

    private void menuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileSaveActionPerformed
        controller.saveHive();
    }//GEN-LAST:event_menuFileSaveActionPerformed

    private void menuFileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileCloseActionPerformed
        controller.fileClose();
    }//GEN-LAST:event_menuFileCloseActionPerformed

    private void menuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
        if (controller.fileClose()) {
            dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_menuFileExitActionPerformed

    private void toolbarOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbarOpenActionPerformed
        controller.fileOpen();
    }//GEN-LAST:event_toolbarOpenActionPerformed

    private void toolbarSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbarSaveActionPerformed
        controller.saveHive();
    }//GEN-LAST:event_toolbarSaveActionPerformed

    private void menuCellPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCellPropertiesActionPerformed
        controller.showProperties();
    }//GEN-LAST:event_menuCellPropertiesActionPerformed

    private void toolbarPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbarPropertiesActionPerformed
        controller.showProperties();
    }//GEN-LAST:event_toolbarPropertiesActionPerformed

    private void menuToolsWipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuToolsWipeActionPerformed
        controller.wipeHive();
    }//GEN-LAST:event_menuToolsWipeActionPerformed

    private void menuToolsScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuToolsScanActionPerformed
        controller.scanHive();
    }//GEN-LAST:event_menuToolsScanActionPerformed

    private void toolbarDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbarDeleteActionPerformed
        controller.deleteCell();
    }//GEN-LAST:event_toolbarDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JLabel labelInfo;
    private javax.swing.JToolBar mainToolbar;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuCell;
    private javax.swing.JMenuItem menuCellProperties;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileClose;
    private javax.swing.JMenuItem menuFileExit;
    private javax.swing.JMenuItem menuFileOpen;
    private javax.swing.JMenuItem menuFileSave;
    private javax.swing.JMenu menuTools;
    private javax.swing.JMenuItem menuToolsScan;
    private javax.swing.JMenuItem menuToolsWipe;
    private javax.swing.JPanel panelMain;
    private javax.swing.JSplitPane splitpaneMain;
    private javax.swing.JTable tableMain;
    private javax.swing.JButton toolbarDelete;
    private javax.swing.JButton toolbarOpen;
    private javax.swing.JButton toolbarProperties;
    private javax.swing.JButton toolbarSave;
    private javax.swing.JTree treeMain;
    // End of variables declaration//GEN-END:variables
}
